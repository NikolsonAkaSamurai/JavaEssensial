public class TaskList {
    /*
    * Задание 1
    * Выучите основные конструкции и понятия, рассмотренные на уроке.
    *
    * Задание 2
    * Используя IntelliJ IDEA, создайте проект.
    * Требуется:
    * Создать класс, представляющий учебный класс ClassRoom.
    * Создайте класс ученик Pupil. В теле класса создайте методы void study(), void read(), void write(), void
    * relax().
    * Создайте 3 производных класса ExcelentPupil, GoodPupil, BadPupil от класса базового класса Pupil и
    * переопределите каждый из методов, в зависимости от успеваемости ученика.
    * Конструктор класса ClassRoom принимает аргументы типа Pupil, класс должен состоять из 4 учеников.
    * Предусмотрите возможность того, что пользователь может передать 2 или 3 аргумента.
    * Выведите информацию о том, как все ученики экземпляра класса ClassRoom умеют учиться, читать,
    *  писать, отдыхать.
    *
    * Задание 3
    Используя IntelliJ IDEA, создайте проект.
    Требуется:
    Создать класс Vehicle.
    В теле класса создайте поля: координаты и параметры средств передвижения (цена, скорость, год
    выпуска).
    Создайте 3 производных класса Plane, Саг и Ship.
    Для класса Plane должна быть определена высота и количество пассажиров.
    Для класса Ship – количество пассажиров и порт приписки.
    Написать программу, которая выводит на экран информацию о каждом средстве передвижения.
    *
    * Задание 4
    Используя IntelliJ IDEA, создайте проект.
    Требуется:
    Создайте класс DocumentWorker.
    В теле класса создайте три метода openDocument(), editDocument(), saveDocument().
    В тело каждого из методов добавьте вывод на экран соответствующих строк: "Документ открыт",
    "Редактирование документа доступно в версии Про", "Сохранение документа доступно в версии Про".
    Создайте производный класс ProDocumentWorker.
    Переопределите соответствующие методы, при переопределении методов выводите следующие строки:
    "Документ отредактирован", "Документ сохранен в старом формате, сохранение в остальных форматах
    доступно в версии Эксперт".
    Создайте производный класс ExpertDocumentWorker от базового класса ProDocumentWorker.
    Переопределите соответствующий метод. При вызове данного метода необходимо выводить на экран
    "Документ сохранен в новом формате".
    В теле метода main() реализуйте возможность приема от пользователя номера ключа доступа pro и exp.
    Если пользователь не вводит ключ, он может пользоваться только бесплатной версией (создается
    экземпляр базового класса), если пользователь ввел номера ключа доступа pro и exp, то должен
    создаться экземпляр соответствующей версии класса, приведенный к базовому – DocumentWorker.
    *
    *Задание 5
    Зайдите на сайт Oracle.
    Используя поисковые механизмы Oracle, найдите самостоятельно описание темы по каждому примеру,
    который был рассмотрен на уроке, так, как это представлено ниже, в разделе «Рекомендуемые
    ресурсы», описания данного урока. Сохраните ссылки и дайте им короткое описание.
    *
    *Дополнительное задание
    * Используя IntelliJ IDEA, создайте проект.
    Требуется:
    Создайте класс Printer.
    В теле класса создайте метод void print(String value), который выводит на экран значение аргумента.
    Реализуйте возможность того, чтобы в случае наследования от данного класса других классов, и вызове
    соответствующего метода их экземпляра, строки, переданные в качестве аргументов методов,
    выводились разными цветами.
    Обязательно используйте приведение типов.
    *
    * Лабораторка 1
    Создать базовый класс «Домашнее животное» и производные классы «Собака», «Кошка», «Попугай», «Хомяк».
    С помощью конструктора установить имя каждого животного и его характеристики.
    Реализуйте для каждого из классов функции:
    Sound – издает звук животного (пишем текстом в консоль);
    Show – отображает имя животного;
    Type – отображает название его подвида.
    *
    * Лабораторка 2
    * Создайте класс Passport (паспорт), который будет содержать паспортную информацию о гражданине Украины.
    С помощью механизма наследования, реализуйте класс ForeignPassport (загран.паспорт) производный от Passport.
    Напомним, что заграничный паспорт содержит помимо паспортных данных, также данные о визах, номер заграничного
    паспорта.
    */
}
