package com.company;

public class TaskList {
    /*
    Задание 1
    Выучите основные конструкции и понятия, рассмотренные на уроке.

    Задание 2
    Создайте проект, используя IntelliJ IDEA.
    Создайте класс MyList<T>. Реализуйте в простейшем приближении возможность использования его
    экземпляра аналогично экземпляру класса List<T>. Минимально требуемый интерфейс взаимодействия
    с экземпляром, должен включать метод добавления элемента, индексатор для получения значения
    элемента по указанному индексу и свойство только для чтения для получения общего количества
    элементов.

    Задание 3
    Создайте проект, используя IntelliJ IDEA.
    Создайте класс MyDictionary<TKey,TValue>. Реализуйте в простейшем приближении возможность
    использования его экземпляра. Минимально требуемый интерфейс взаимодействия с экземпляром,
    должен включать метод добавления пар элементов, индексатор для получения значения элемента по
    указанному индексу и свойство только для чтения для получения общего количества пар элементов.

    Задание 4
    Зайдите на сайт Oracle.
    Используя поисковые механизмы Oracle, найдите самостоятельно описание темы по каждому примеру,
    который был рассмотрен на уроке, так, как это представлено ниже, в разделе «Рекомендуемые
    ресурсы», описания данного урока. Сохраните ссылки и дайте им короткое описание.

    Дополнительное
    Создайте проект, используя IntelliJ IDEA.
    Создайте класс MyClass<T>, содержащий статический фабричный метод - T factoryMethod(), который
    будет порождать экземпляры типа, указанного в качестве параметра типа (указателя места заполнения
    типом – Т).

    Лабораторка1
    Создайте Generic-класс. В классе должен быть метод Show(), который будет выводить на консоль тип, переданный в сам класс
    При MyClass<Integer> st = new MyClass<>();
    вывод на консоль class java.lang.Integer

    Лабораторка2
    Напишите свой итератор по одномерному массиву.
    Итератором будет класс, который реализовывает интерфейс Iterator<T>.
    В данном классе вам нужно создать конструктор и реализовать
    методы boolean hasNext() и T next(). В методе next() необходимо будет сделать проверку на следующий элемент,
    если такого нет выбросить ошибку NoSuchElementException()
     */

}
